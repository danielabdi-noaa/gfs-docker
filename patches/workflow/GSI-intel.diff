diff --git CMakeLists.txt CMakeLists.txt
index bfeb9438b..2c48c40bb 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -268,7 +268,7 @@ project(GSI)
     add_subdirectory(src/enkf)
   endif(BUILD_ENKF) 
   if(BUILD_UTIL)
-    add_subdirectory(util/EnKF/gfs/src)
+    #add_subdirectory(util/EnKF/gfs/src)
     add_subdirectory(util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_horiz.fd)
     add_subdirectory(util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_time.fd)
     add_subdirectory(util/Radiance_Monitor/nwprod/radmon_shared.v3.0.0/sorc/verf_radang.fd)
diff --git modulefiles/modulefile.ProdGSI.linux modulefiles/modulefile.ProdGSI.linux
new file mode 100644
index 000000000..340be5d68
--- /dev/null
+++ modulefiles/modulefile.ProdGSI.linux
@@ -0,0 +1,14 @@
+#!/bin/bash
+
+#%Module######################################################################
+##
+
+echo "Setting environment variables for gsi on Linux with gcc/gfortran"
+
+##
+## CRTM
+##
+
+export CRTM_VER=2.3.0
+export CRTM_INC=/opt/CRTM-${CRTM_VER}/crtm_v${CRTM_VER}/include
+export CRTM_LIB=/opt/CRTM-${CRTM_VER}/crtm_v${CRTM_VER}/lib/libcrtm.a
diff --git src/fv3gfs_ncio/CMakeLists.txt src/fv3gfs_ncio/CMakeLists.txt
index 337a5378c..007b76ff0 100644
--- src/fv3gfs_ncio/CMakeLists.txt
+++ src/fv3gfs_ncio/CMakeLists.txt
@@ -3,6 +3,7 @@ if(BUILD_FV3GFS_NCIO)
   set(Fortran_MODULE_DIRECTORY "${PROJECT_BINARY_DIR}/include")
   # NetCDF-4 library
   include_directories( ${NETCDF_INCLUDES} ${FV3GFS_NCIO_INCS} )
+  message(STATUS "The value of NETCDF_INCLUDES=${NETCDF_INCLUDES}")
   FILE(GLOB FV3GFS_NCIO_SRC ${CMAKE_CURRENT_SOURCE_DIR}/module_fv3gfs_ncio.f90 )
   set_source_files_properties( ${FV3GFS_NCIO_SRC} PROPERTIES COMPILE_FLAGS ${FV3GFS_NCIO_Fortran_FLAGS} )
   add_library(fv3gfs_ncio STATIC ${FV3GFS_NCIO_SRC})
diff --git src/ncdiag/CMakeLists.txt src/ncdiag/CMakeLists.txt
index 154a098ed..0f0a412be 100644
--- src/ncdiag/CMakeLists.txt
+++ src/ncdiag/CMakeLists.txt
@@ -8,6 +8,7 @@ if(BUILD_NCDIAG)
   # NetCDF-4 library
   include_directories( ${NETCDF_INCLUDES} ${NCDIAG_INCS} )
 
+  message( STATUS "NETCDF_LIBRARIES=${NETCDF_LIBRARIES} NETCDF_INCLUDES=${NETCDF_INCLUDES}")
   # 32-bit reals, for now
   add_definitions(-D_REAL4_ -DUSE_MPI)
   FILE(GLOB NCDIAG_SRC ${CMAKE_CURRENT_SOURCE_DIR}/*90 )
diff --git ush/build_all_cmake.sh ush/build_all_cmake.sh
index ceaf91d9c..9931ac12a 100755
--- ush/build_all_cmake.sh
+++ ush/build_all_cmake.sh
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/bin/bash
 
 set -ex
 
@@ -43,6 +43,8 @@ elif [[ -d /discover ]] ; then
 elif [[ -d /work ]]; then
     . $MODULESHOME/init/sh
     target=orion
+elif [[ -d /dev ]] ; then
+    target=linux
 else
     echo "unknown target = $target"
     exit 9
diff --git util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_horiz.fd/read_diag.f90 util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_horiz.fd/read_diag.f90
index 7e592d3a5..774d0a05e 100644
--- util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_horiz.fd/read_diag.f90
+++ util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_horiz.fd/read_diag.f90
@@ -649,7 +649,7 @@ module read_diag
   
     nlevs = header_fix%nlevs 
 
-    if( ncdiag_open_status(cur_idx)%nc_read == .true. ) then 
+    if( ncdiag_open_status(cur_idx)%nc_read .eqv. .true. ) then 
        iflag = -1  
     else  
        iflag = 0
@@ -663,7 +663,8 @@ module read_diag
           ntobs = nrecords
        end if
 
-       write(6,*) 'header_fix%nlevs, ncdiag_open_status(id)%num_records, ntobs = ', header_fix%nlevs, ncdiag_open_status(id)%num_records, ntobs
+       write(6,*) 'header_fix%nlevs, ncdiag_open_status(id)%num_records, ntobs = ', &
+               header_fix%nlevs, ncdiag_open_status(id)%num_records, ntobs
 
        !------------------------------------
        !  allocate the returned structures
@@ -954,7 +955,7 @@ module read_diag
         end if 
      end do 
 
-     if( verify_var_name_nc == .false. ) then
+     if( verify_var_name_nc .eqv. .false. ) then
         do k=1,num_vars
            if( test_name == var_names(k) ) then
               verify_var_name_nc = .true.
diff --git util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_time.fd/read_diag.f90 util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_time.fd/read_diag.f90
index 7e592d3a5..774d0a05e 100644
--- util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_time.fd/read_diag.f90
+++ util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_time.fd/read_diag.f90
@@ -649,7 +649,7 @@ module read_diag
   
     nlevs = header_fix%nlevs 
 
-    if( ncdiag_open_status(cur_idx)%nc_read == .true. ) then 
+    if( ncdiag_open_status(cur_idx)%nc_read .eqv. .true. ) then 
        iflag = -1  
     else  
        iflag = 0
@@ -663,7 +663,8 @@ module read_diag
           ntobs = nrecords
        end if
 
-       write(6,*) 'header_fix%nlevs, ncdiag_open_status(id)%num_records, ntobs = ', header_fix%nlevs, ncdiag_open_status(id)%num_records, ntobs
+       write(6,*) 'header_fix%nlevs, ncdiag_open_status(id)%num_records, ntobs = ', &
+               header_fix%nlevs, ncdiag_open_status(id)%num_records, ntobs
 
        !------------------------------------
        !  allocate the returned structures
@@ -954,7 +955,7 @@ module read_diag
         end if 
      end do 
 
-     if( verify_var_name_nc == .false. ) then
+     if( verify_var_name_nc .eqv. .false. ) then
         do k=1,num_vars
            if( test_name == var_names(k) ) then
               verify_var_name_nc = .true.
diff --git util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_time.fd/time.f90 util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_time.fd/time.f90
index d6402196a..8ee11d325 100755
--- util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_time.fd/time.f90
+++ util/Ozone_Monitor/nwprod/oznmon_shared.v2.0.0/sorc/oznmon_time.fd/time.f90
@@ -330,7 +330,7 @@ program main
    end do
 
 !  Do validation
-   if( validate == .TRUE. ) then
+   if( validate .eqv. .TRUE. ) then
       call load_base( satname, ier )
 
       write(6,*) 'ier from load_base = ', ier
@@ -345,7 +345,7 @@ program main
    do j=1,n_levs
       if ( use(j,k) > 0.0 ) then
 
-         if( validate == .TRUE. .AND. ier >= 0 ) then
+         if( validate .eqv. .TRUE. .AND. ier >= 0 ) then
 
             pbound = 0.00
             call validate_penalty( j, k, penalty(j,k), valid_penalty, pbound, iret )
@@ -370,7 +370,7 @@ program main
       endif
    end do
 
-   if( validate == .TRUE. ) then
+   if( validate .eqv. .TRUE. ) then
       close( lupen )
       close( lucnt )
    endif
